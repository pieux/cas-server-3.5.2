<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<chapter xml:lang="en" xml:id="introduction" xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://docbook.org/ns/docbook ./schemata/docbook.xsd"
  version="5.0">

  <title>Introduction</title>

  <mediaobject>
    <imageobject>
      <imagedata fileref="media/sso-diagram.png" format="PNG" contentwidth="416pt" contentdepth="568pt" align="left" />
    </imageobject>
  </mediaobject>

  <para>CAS is a multiprotocol Web single sign-on (SSO) product composed of a
    single logical server component that services authentication requests from
    multiple CAS clients that communicate via one or more supported protocols.
    The CAS server delegates authentication decisions to any number of supported
    authentication mechanisms including LDAP/Active Directory, Kerberos, and
    RDBMS. The hallmark of CAS is ease of integration and extension in support
    of a wide variety of environments. In addition to supporting a large number
    of technologies out of the box, the well-documented API extension points
    have enabled deployers to develop custom components to support novel use
    cases not supported by default.</para>

  <section xml:id="introduction-features">
    <title>Features</title>
    <para>CAS has a number of features that distinguish it from other SSO
      products:</para>

    <section>
      <title>SSO Implementation</title>
      <para>Unlike many SSO products, CAS does not use shared cookies to
        authenticate to services within the SSO domain. The CAS implementation
        uses a secure SSO session identifier (ticket-granting ticket in CAS
        protocol parlance), shared exclusively with the CAS server, to generate
        one-time-use credentials (service tickets in CAS protocol parlance) that
        are used to access services within the SSO domain. Passing the "master
        key" session identifier exclusively between the user's browser and CAS
        server dramatically limits the potential for man-in-the-middle attacks
        on the session identifier. CAS benefits from increased security in this
        regard over shared cookie strategies.</para>
    </section>

    <section>
      <title>Integration</title>
      <para>CAS client integration components are available for all popular Web
        development frameworks and many popular Web applications.</para>
      <itemizedlist>
        <title>Popular CAS Clients</title>
        <listitem>
          <simpara>Java</simpara>
        </listitem>
        <listitem>
          <simpara>Microsoft .NET Framework</simpara>
        </listitem>
        <listitem>
          <simpara>PHP</simpara>
        </listitem>
        <listitem>
          <simpara>Outlook Web Access</simpara>
        </listitem>
        <listitem>
          <simpara>Drupal</simpara>
        </listitem>
        <listitem>
          <simpara>Confluence</simpara>
        </listitem>
      </itemizedlist>
      <para>The combination of open protocols and open source facilitate the
        development of integration components for almost any product as has been
        demonstrated over many years by the development of components for
        frameworks as varied as PL/SQL and Cold Fusion.</para>
    </section>

    <section>
      <title>Authentication Providers</title>
      <para>The CAS server authenticates users by means of the
        AuthenticationHandler component for which a number of implementations
        are provided with the CAS distribution.</para>
      <itemizedlist>
        <title>Bundled Authentication Providers</title>
        <listitem>
          <simpara>LDAP (e.g. Active Directory, OpenLDAP)</simpara>
        </listitem>
        <listitem>
          <simpara>RDBMS</simpara>
        </listitem>
        <listitem>
          <simpara>SPNEGO</simpara>
        </listitem>
        <listitem>
          <simpara>X.509/Client SSL</simpara>
        </listitem>
        <listitem>
          <simpara>JAAS</simpara>
        </listitem>
        <listitem>
          <simpara>RADIUS</simpara>
        </listitem>
        <listitem>
          <simpara>Flat file</simpara>
        </listitem>
      </itemizedlist>
      <para>CAS has a proven track record of supporting custom authentication
        providers such as proprietary Web services. Adopters leverage the open
        and well-documented source to develop custom AuthenticationHandler
        components and wire them into the application using Spring XML
        configuration. The result is straightforward extension for virtually any
        authentication need.</para>
    </section>

    <section>
      <title>Authorization</title>
      <para>CAS approaches authorization from the perspective that authorization
        is the responsibility of individual services that authenticate to CAS.
        This design owes to the history of CAS having been developed in the
        Higher Education setting, which is typically highly decentralized and
        ill suited to agreement and enforcement of centralized authorization
        policy. CAS supports decentralized authorization via an attribute
        release mechanism where any number of stores may be configured to load
        and store attributes about principals upon authentication to CAS, and
        which are released to services when they authenticate to CAS. Attributes
        are interpreted by services as needed, commonly for authorization and
        personalization.</para>
    </section>
  </section>

  <section xml:id="support">
    <title>Support</title>
    <para>CAS is supported by a community of developers and users via a variety
      of means.</para>
    <itemizedlist>
      <title>Community Support Channels</title>
      <listitem>
        <simpara>Official product documentation</simpara>
      </listitem>
      <listitem>
        <simpara>
          Real-time user support via the
          <email>cas-user@lists.jasig.org</email>
          mailing list
        </simpara>
      </listitem>
      <listitem>
        <simpara>Regular conferences and webinars</simpara>
      </listitem>
    </itemizedlist>
    <para>
      It is important to note that mailing list inquiries commonly have
      <emphasis>response times measured in minutes</emphasis>,
      with resolutions often occurring same day if not first response. The CAS
      community spans multiple industries and the globe; with that breadth it is
      very likely that an active community member has an answer or insight to the
      problem at hand.
    </para>
    <para>In addition to community support, a number of Jasig partners offer
      paid support for CAS.</para>
    <itemizedlist>
      <title>Commercial Support Channels</title>
      <listitem>
        <simpara>
          <link xlink:href="http://www.unicon.net/services/cas/support">Unicon Cooperative Support for CAS</link>
        </simpara>
      </listitem>
    </itemizedlist>
  </section>
</chapter>
